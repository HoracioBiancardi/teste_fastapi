name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - 'release/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # ou a versão do Python que você está usando

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "::add-path::$(python3 -m site --user-base)/bin"
          
      - name: Install dependencies
        run: poetry install

      - name: Run tests with coverage
        run: |
          poetry run pytest --cov=./ --cov-report=xml

      - name: Verify coverage
        run: |
          poetry run coverage report --fail-under=80
        continue-on-error: true

      - name: Upload coverage report
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.xml

  require-approval:
    runs-on: ubuntu-latest
    needs: build
    if: success() && steps.verify-coverage.outcome == 'success'

    steps:
      - name: Await approval
        uses: benc-uk/workflow-wait-for-approval@v2.2
        with:
          tag: "awaiting-approval"
          requires: "approver"  # nome do grupo ou usuário que precisa aprovar
          timeout_minutes: 60
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge pull request into main
        if: success()
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: 'merge'
            })
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  merge-release-to-main:
    runs-on: ubuntu-latest
    needs: require-approval
    if: success()
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Merge release into main
        run: |
          git fetch origin
          git checkout main
          git merge --no-ff ${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes to main
        run: |
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
